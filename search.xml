<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一期： 零基础快速搭建个人博客， Hexo + GitHub Pages + Cloudflare Pages 全流程指南， 免费部署超详细！</title>
      <link href="/article/hexo-1/"/>
      <url>/article/hexo-1/</url>
      
        <content type="html"><![CDATA[<h1 id="第一期-零基础快速搭建个人博客-Hexo-GitHub-Pages-Cloudflare-Pages-全流程指南-免费部署超详细"><a href="#第一期-零基础快速搭建个人博客-Hexo-GitHub-Pages-Cloudflare-Pages-全流程指南-免费部署超详细" class="headerlink" title="第一期: 零基础快速搭建个人博客, Hexo + GitHub Pages + Cloudflare Pages 全流程指南, 免费部署超详细!"></a>第一期: 零基础快速搭建个人博客, Hexo + GitHub Pages + Cloudflare Pages 全流程指南, 免费部署超详细!</h1><h2 id="1-前期准备工作"><a href="#1-前期准备工作" class="headerlink" title="1. 前期准备工作"></a>1. 前期准备工作</h2><ol><li><a href="https://nodejs.org/en">Node</a> (必备)</li><li><a href="https://git-scm.com/downloads">Git</a> (必备)</li><li><a href="https://code.visualstudio.com/">VSCode</a> (可选)</li><li>域名, 建议配置一个域名以避免被 “防火墙” 阻挡, 国内域名需要备案，备案周期较长</li><li>配置 <a href="https://dash.cloudflare.com/">Cloudflare</a>, 托管域名 </li><li><a href="https://hexo.io/zh-cn/">Hexo</a> 官方主题展示: <a href="https://hexo.io/themes/">Themes</a></li></ol><h2 id="2-安装-Node"><a href="#2-安装-Node" class="headerlink" title="2. 安装 Node"></a>2. 安装 Node</h2><ol><li>从 <a href="https://nodejs.org/en/download/package-manager">Node 官网</a> 找到适合自己系统的版本</li><li>我这里部署在 <strong>VPS</strong> 上，操作系统是 <strong>CentOS Stream 9 64位 UEFI版</strong></li><li><strong>Linux系统</strong> 下载压缩包 <a href="https://nodejs.org/en/download/prebuilt-binaries">node-v22.11.0-linux-x64.tar.xz</a> </li><li>验证安装成功，在命令行中输入 <code>node -v</code> 和 <code>npm -v</code> 验证版本信息</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 curl 和 bash（如果还没有安装）</span></span><br><span class="line"><span class="built_in">sudo</span> dnf install -y curl bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 SCP 将 Node.js 的安装包从本地机器传输到远程服务器上的指定目录</span></span><br><span class="line">scp node-v22.11.0-linux-x64.tar.xz root@服务器IP地址:~/.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在远程服务器上解压缩 Node.js 安装包</span></span><br><span class="line">tar -xvf node-v22.11.0-linux-x64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Node.js 命令的符号链接到系统的 bin 目录，使其全局可用</span></span><br><span class="line"><span class="built_in">mv</span> node-v22.11.0-linux-x64 /usr/local/lib/nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 npm 命令的符号链接到系统的 bin 目录，使其全局可用</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/lib/nodejs/bin/node /usr/local/bin/node</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Node.js 的版本，验证安装是否成功</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/lib/nodejs/bin/npm /usr/local/bin/npm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Node.js 的版本，验证安装是否成功</span></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 npm 的版本，验证 npm 是否正确安装并可用</span></span><br><span class="line">nmp -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125211839053.png"></p><h2 id="3-安装-Git"><a href="#3-安装-Git" class="headerlink" title="3. 安装 Git"></a>3. 安装 Git</h2><ol><li>从 <a href="https://git-scm.com/downloads">Git 官网</a> 下载适配的 <strong>Git</strong> 版本</li><li><strong>Linux 系统</strong> 安装 <strong>Git</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 EPEL 存储库</span></span><br><span class="line">dnf install epel-release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Git</span></span><br><span class="line">dnf -y install git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 Git 版本</span></span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125212604137.png"></p><h2 id="4-配置-Git-密钥并连接-Github"><a href="#4-配置-Git-密钥并连接-Github" class="headerlink" title="4. 配置 Git 密钥并连接 Github"></a>4. 配置 Git 密钥并连接 Github</h2><ol><li>常用 Git 命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前 Git 配置文件中的所有配置项</span></span><br><span class="line">git config -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示系统级（适用于所有用户）的 Git 配置文件中的配置项</span></span><br><span class="line">git config --system --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示全局（用户级） Git 配置文件中的配置项</span></span><br><span class="line">git config --global --list</span><br></pre></td></tr></table></figure><ol start="2"><li>配置用户名和邮箱</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>通过 <code>git config -l</code> 验证是否成功</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125213623567.png"></p><ol start="4"><li>配置公钥连接 <strong>Github</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成 SSH 公钥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125214048097.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一路回车生成密钥，进入 .ssh 文件夹复制 id_rsa.pub 公钥内容，配置到 Github 的 SSH 设置中</span></span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125214411498.png"></p><ol start="5"><li><p>将 <strong>SSH KEY</strong> 配置到 <strong>Github</strong> </p><p>进入 <strong>GitHub</strong>，点击右上角头像 选择 <code>settings</code>，进入设置页选择 <strong>SSH and GPG keys</strong>，名字随便起，公钥填入 <strong>key</strong> 那一栏。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125215441721.png"></p><ol start="6"><li>测试连接</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125145128994.png"></p><h2 id="5-创建-Github-io-仓库"><a href="#5-创建-Github-io-仓库" class="headerlink" title="5. 创建 Github.io 仓库"></a>5. 创建 Github.io 仓库</h2><ol><li>点击右上角的 <code>+</code> 按钮，选择新建仓库，命名格式为 <code>&lt;用户名&gt;.github.io</code>，（注意：前缀必须为用户名）选择公开 <code>Public</code>。</li><li>点击 Creat repository 进行创建即可。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125145322642.png"></p><h2 id="6-初始化Hexo博客"><a href="#6-初始化Hexo博客" class="headerlink" title="6. 初始化Hexo博客"></a>6. 初始化Hexo博客</h2><ol><li>创建文件夹保存博客源码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/hexo</span><br></pre></td></tr></table></figure><ol start="2"><li>设置 <strong>npm</strong> 镜像源</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 npm 镜像源为华为镜像源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 npm 镜像源为阿里镜像源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com/</span><br></pre></td></tr></table></figure><ol start="3"><li>安装 <strong>Hexo</strong> （注意：如果出现报错就是没有设置环境变量）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><ol start="4"><li>设置环境变量</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/lib/nodejs/lib/node_modules/hexo-cli/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><ol start="5"><li>使用 <code>hexo -v</code> 命令验证安装成功</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241126111429553.png"></p><ol start="6"><li>初始化 <a href="https://github.com/hexojs/hexo-starter">hexo</a> 项目安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo <span class="comment">#因为网络问题执行不了这条命令，就换下面我提供的安装方式</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GitHub下载软件包</span></span><br><span class="line">https://github.com/hexojs/hexo-starter</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows上传软件包到vps上</span></span><br><span class="line">scp hexo-starter-master.zip root@IP地址:~/.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将压缩包解压</span></span><br><span class="line">unzip hexo-starter-master.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件重命名</span></span><br><span class="line"><span class="built_in">mv</span> hexo-starter-master blog-demo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到博客目录</span></span><br><span class="line"><span class="built_in">cd</span> blog-demo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Node.js 项目中的依赖包</span></span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><ol start="7"><li>初始化项目成功截图</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125163938150.png"></p><ol start="8"><li>启动项目并验证</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241126112847126.png"></p><ol start="9"><li>在浏览器中访问 <a href="https://localhost:4000/">https://localhost:4000/</a> 以查看效果</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125164212732.png"></p><h2 id="7-将静态博客挂载到-Github-Pages"><a href="#7-将静态博客挂载到-Github-Pages" class="headerlink" title="7. 将静态博客挂载到 Github Pages"></a>7. 将静态博客挂载到 Github Pages</h2><ol><li>修改 <code>_config.yml</code> 文件，配置 <code>repository</code> 为你的 GitHub 地址，分支改为 <code>main</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">102 <span class="comment"># Deployment</span></span><br><span class="line">103 <span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">104 deploy:</span><br><span class="line">105   <span class="built_in">type</span>: git</span><br><span class="line">106   repository: git@github.com:zetman-lz/zetman-lz.github.io.git</span><br><span class="line">107   branch: main</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241126113405813.png"></p><ol start="2"><li>安装 <code>hexo-deployer-git</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="3"><li>部署到 <strong>GitHub</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Git BASH终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VSCODE终端</span></span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><ol start="4"><li>部署成功会出现以下信息</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125165252980.png"></p><ol start="5"><li>访问 <code>https://&lt;用户名&gt;.github.io/</code> 以查看博客</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241126113908998.png"></p><h2 id="8-将静态博客挂载到-Cloudflare-Pages"><a href="#8-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="8. 将静态博客挂载到 Cloudflare Pages"></a>8. 将静态博客挂载到 Cloudflare Pages</h2><ol><li>通过 <a href="https://dash.cloudflare.com/5ba47c05e54134ab4537ef25a17e7797">Cloudflare Pages</a> 连接 <strong>Git</strong> 仓库，左边找到 <strong>Workers和Pages</strong>，点击右上角创建。</li><li>登录 <strong>GitHub</strong>，点击保存并部署。</li><li>部署成功后，访问 <strong>Cloudflare</strong> 提供的链接。</li></ol><p>（注意：如有自定义域名，可以在 <a href="https://dash.cloudflare.com/5ba47c05e54134ab4537ef25a17e7797">Cloudflare Pages</a> 中绑定。没有建议去申请，这样博客就不被墙了。）</p><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241126114449901.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125193443740.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125193545957.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241125193804160.png"></p><ol start="4"><li>部署成功后点击访问</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241126114828030.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zetman-lz/PicGo@main/image-20241126114918339.png"></p><h2 id="9-基本使用"><a href="#9-基本使用" class="headerlink" title="9. 基本使用"></a>9. 基本使用</h2><ol><li>新建一篇博文</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 这是一篇新的博文</span><br></pre></td></tr></table></figure><p>（注意：编辑 <code>_posts</code> 文件夹中的新建文章，使用 <strong>Markdown</strong> 语法编写内容。）</p><ol start="2"><li>本地预览</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><ol start="3"><li>推送到 <strong>GitHub</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/article/hello-world/"/>
      <url>/article/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
